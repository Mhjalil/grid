@mixin pull($vp, $vpprefix, $total){
    @media screen and (min-width: $vp) {
        @for $i from 1 to $total {
            .#{$vpprefix}-col-#{$total}-pull-#{$i} {
                #{$right}: percentage($i / $total);
                #{$left}: auto;
            }

            @include if-mixed(".#{$vpprefix}-col-#{$total}-pull-#{$i}", (#{$right}: percentage($i / $total), #{$left}: auto));
        }
    }
}

@mixin push($vp, $vpprefix, $total){
    @media screen and (min-width: $vp) {
        @for $i from 1 to $total {
            .#{$vpprefix}-col-#{$total}-push-#{$i} {
                #{$left}: percentage($i / $total);
                #{$right}: auto;
            }

            @include if-mixed(".#{$vpprefix}-col-#{$total}-push-#{$i}", (#{$left}: percentage($i / $total), #{$right}: auto));
        }
    }
}

@mixin pullAuto($vp, $vpprefix, $vpcolumns, $total){
    @media screen and (min-width: $vp) {
        $ratio: $total / $vpcolumns;
        @for $i from 1 to $vpcolumns {
            .#{$vpprefix}-col-#{$total}-pull-#{$i} {
                #{$right}: percentage(($i*$ratio) / $total);
                #{$left}: auto;
            }

            @include if-mixed(".#{$vpprefix}-col-#{$total}-pull-#{$i}", (#{$right}: percentage(($i*$ratio) / $total), #{$left}: auto));
        }
    }
}

@mixin pushAuto($vp, $vpprefix, $vpcolumns, $total){
    @media screen and (min-width: $vp) {
        $ratio: $total / $vpcolumns;
        @for $i from 1 to $vpcolumns {
            .#{$vpprefix}-col-#{$total}-push-#{$i} {
                #{$left}: percentage(($i*$ratio) / $total);
                #{$right}: auto;
            }

            @include if-mixed(".#{$vpprefix}-col-#{$total}-push-#{$i}", (#{$left}: percentage(($i*$ratio) / $total), #{$right}: auto));
        }
    }
}

@if $honorAutoColumnBreakdown {
    @each $columnCount, $column-breakdown in $columns {
        @for $i from 1 through length($column-breakdown) {
            @include pushAuto(nth($vp-list, $i), nth($vp-prefix-list, $i), nth($column-breakdown, $i), $columnCount);
            @include pullAuto(nth($vp-list, $i), nth($vp-prefix-list, $i), nth($column-breakdown, $i), $columnCount);
        }
    }
} @else {
    @each $columnCount, $column-breakdown in $columns {
        @for $i from 1 through length($column-breakdown) {
            @include push(nth($vp-list, $i), nth($vp-prefix-list, $i), $columnCount);
            @include pull(nth($vp-list, $i), nth($vp-prefix-list, $i), $columnCount);
        }
    }
}